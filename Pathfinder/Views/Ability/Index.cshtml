@model Pathfinder.ViewModels.AbilityViewer

@{
    ViewBag.Title = "Abilities";
}

<h2>Abilities</h2>

@using (Html.BeginForm())
{
    @Html.DropDownListFor(m => m.TypeId, new SelectList(Model.Types, "AbilityTypeId", "Name"),
        new { @class = "form-control", @onchange = "this.form.submit();" })<br />

    @Html.HiddenFor(m => m.CharacterId)

    foreach (var abilityType in Model.Abilities)
    {
        <h3>@abilityType.Name</h3>
        <table class="section full noclick">
            <thead>
                <tr>
                    <td>Name</td>
                    <td class="hidden-xs">Description</td>
                    <td>Active</td>
                </tr>
            </thead>
            @foreach (var ability in abilityType.Abilities)
            {
                <tr>
                    <td data-href="@Url.Action("AbilityBonuses", "Ability", new { Id = ability.AbilityId })">@ability.Name</td>
                    <td class="hidden-xs" data-href="@Url.Action("AbilityBonuses", "Ability", new { Id = ability.AbilityId })">@ability.Description</td>
                    <td align="right" style="vertical-align: central;">
                        @if (ability.IsConditional)
                        {
                            @Html.EditorFor(m => ability.Active, new
                                   {
                                       htmlAttributes = new
                                       {
                                           @class = "form-control",
                                           @onclick = "UpdateAbility(" + ability.AbilityId + ","
                                                                       + ability.CharacterId + ","
                                                                       + ability.AbilityTypeId + ",'"
                                                                       + ability.Name + "','"
                                                                       + ability.Description + "','"
                                                                       + ability.IsConditional + "','"
                                                                       + !ability.Active + "')"
                                       }
                                   });
                        }
                    </td>

                </tr>
            }
        </table>
    }<br />

    @Html.ActionLink("+ [New Ability]", "CreateAbility", new { Id = Model.CharacterId })<br />
    @Html.ActionLink("+ [New Ability Type]", "CreateAbilityType", new { Id = Model.CharacterId })
}

